{
  "version": 1,
  "context": {
    "include": [
      "rules/*.md",
      "for cursor/context/*.md"
    ],
    "exclude": [
      "**/tmp*/**",
      "**/*.csv",
      "**/*_BACKUP.md",
      "**/*_ARCHIVE.md"
    ]
  },
  "rules": {
    "enforceCSS": true,
    "styleGuide": "Bauhaus Mid-Century Modern Hollywood",
    "colorContrast": {
      "noLightTextOnLight": true,
      "noDarkTextOnDark": true
    },
    "deployment": {
      "stack": ["Supabase", "Vercel"],
      "disallowed": ["Sanity", "Airtable"],
      "useMCPTools": ["git", "stripe", "vercel"],
      "postDeployCheck": {
        "enabled": true,
        "delaySeconds": 120,
        "action": "check_vercel_deploy_status"
      }
    },
    "commitPolicy": {
      "requireDescription": true,
      "requireUniqueBuildTag": true,
      "runSyntaxCheckBeforeCommit": true
    },
    "logging": {
      "updateChangeLog": true,
      "changeLogFile": "for cursor/context/context_decisions.md"
    }
  },
  "mcp": {
    "vercel": {
      "check_vercel_deploy_status": {
        "command": "vercel deployments ls --limit 1 --token $VERCEL_TOKEN | grep READY || echo 'Deployment not ready'",
        "postDelaySeconds": 120,
        "onFail": "echo '❌ Vercel deploy not ready' >> for cursor/context/context_decisions.md",
        "onSuccess": "echo '✅ Deployment ready at $(date)' >> for cursor/context/context_decisions.md"
      }
    },
    "git": {
      "afterCommit": "git log -1 --pretty=format:'%h %s (%cd)' >> for cursor/context/context_decisions.md"
    }
  },
  "metadata": {
    "notes": [
      "Cursor uses MCP tools to run git, stripe, and vercel tasks directly.",
      "After each successful push, waits 120 seconds and queries Vercel for deployment status.",
      "Results (success or fail) are logged into for cursor/context/context_decisions.md automatically."
    ]
  }
}
